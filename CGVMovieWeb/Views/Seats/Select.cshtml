@model CGVMovieWeb.Models.SelectSeatViewModel
@{
    ViewBag.Title = "Select";
    ViewBag.movieOpen = "active";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-2">
    <h2 class="text-center mb-2">Chọn Ghế Ngồi cho phim: @Model.MovieTitle</h2>

    <div class="text-center">
        <div class="d-flex justify-content-center flex-wrap mt-2">
            @for (int i = 0; i < Model.AvailableSeats.Count; i++)
            {
                var seat = Model.AvailableSeats[i];
                var seatClass = seat.IsAvailable == true ? "seat available" : "seat occupied";

                // Mở thẻ div mới mỗi khi bắt đầu một hàng mới
                if (i > 0 && i % 8 == 0)
                {
                @:</div><div class="d-flex justify-content-center flex-wrap mt-3">
                }

                <div class="@seatClass" data-seat="@seat.SeatNumber" onclick="selectSeat(this)">
                    @seat.SeatNumber
                </div>
            }
        </div>
    </div>
    <div class="legend  mt-4 d-flex m-auto gap-2 justify-content-center align-items-center">
        <p class="d-flex justify-content-center align-items-center"><span class="seat legend-available text-center"></span> Ghế Trống</p>
        <p class="d-flex justify-content-center align-items-center"><span class="seat legend-selected text-center"></span> Ghế Đã Chọn</p>
        <p class="d-flex justify-content-center align-items-center"><span class="seat legend-occupied text-center"></span> Ghế Đã Đặt</p>
    </div>

    <div class="text-center mt-2">
        <a href="/Home/Back" class="btn btn-back">Quay Lại</a>
        <button class="btn btn-submit" type="button" onclick="showSelectedSeats()">Xác Nhận Đặt Vé</button>
    </div>
</div>

<!-- Modal xác nhận -->
<div id="confirmationModal" class="custom-modal">
    <div class="custom-modal-content">
        <div class="custom-modal-header">
            <h5>Xác nhận vé</h5>
        </div>

        <div class="custom-modal-body" style="display:flex; justify-content:center;">
            <div class="modal-body-title" style="width:50%; height:100%;">
                <p><strong>Tên phim:</strong> @Model.MovieTitle</p>
                <p><strong>Giá vé:</strong> @Model.TicketPrice.ToString("N0") VND</p>
                <p><strong>Số ghế đã chọn:</strong> <span id="selectedSeatCount">0</span></p>
                <p><strong>Tổng Giá Vé:</strong> <span id="totalPrice">0 VND</span></p>
            </div>
            <div class="modal-body-main" style="width:50%; height:100%;">
                <ul id="selectedSeatsList" class="list-unstyled"></ul>
            </div>
            <form id="ticketForm" method="post" action="@Url.Action("DatVe", "Seats")">
                <input type="hidden" name="ShowtimeID" id="ShowtimeID" value="@Model.ShowtimeID" />
                <input type="hidden" name="TicketPrice" value="@Model.TicketPrice" />
                <input type="hidden" name="SelectedSeats" id="SelectedSeats" />
                <input type="hidden" name="PaymentConfirmation" id="PaymentConfirmation" value="false" />
                <input type="hidden" name="PaymentMethod" id="PaymentMethod" value="PayAtTheCounter" />
            </form>
        </div>

        <div class="mb-2">
            <label for="paymentMethod" class="mb-1">Chọn phương thức thanh toán:</label>
            <select id="paymentMethod" name="PaymentMethod" class="form-control" onchange="togglePaymentMethod()">
                <option value="0">Thanh toán tại quầy</option>
                <option value="1">Chuyển khoản</option>
            </select>
        </div>

        <div id="qrCodeSection" class=" mb-4">
        </div>


        <div class="custom-modal-footer">
            <button class="btn btn-close-modal" onclick="closeModal()">Đóng</button>
            <button class="btn btn-submit-modal" onclick="submitForm()">Xác nhận</button>
        </div>
    </div>
</div>




<!-- CSS cho màu ghế -->
<style>
    #qrCodeSection{
        display: none;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

        #qrCodeSection.payment
        {
            display:flex;
        }

        .seating-layout {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
        }

    .seat-row {
        display: flex;
        flex-wrap: nowrap;
        justify-content: center;
        margin-bottom: 10px;
    }

    .seat {
        width: 40px;
        height: 40px;
        margin: 5px;
        text-align: center;
        line-height: 40px;
        border-radius: 5px;
        cursor: pointer;
    }

    .available {
        background-color: #c0c0c0;
        color: white;
    }

    .occupied {
        background-color: #dc3545;
        color: white;
        pointer-events: none;
    }

    .selected {
        background-color: #28a745;
        color: white;
    }
    .btn-submit {
        color: light-dark(#fff, #222222) ;
        background-color: light-dark( #222222,var(--color-yellow)) ;
    }

        .btn-submit:hover
        {
            background-color: #ff0000;
            color: white;
            box-shadow: 0 0 8px #ff0000;
        }

        .btn-submit:active
        {
            background-color: #fff;
            color: #ff0000;
        }
        /* Legen màu */
        .legend-available {
            background-color: #c0c0c0;
            width: 20px;
            height: 20px;
            display: inline-block;
            margin-right: 5px;
        }

    .legend-selected {
        background-color: #28a745;
        width: 20px;
        height: 20px;
        display: inline-block;
        margin-right: 5px;
    }

    .legend-occupied {
        background-color: #dc3545;
        width: 20px;
        height: 20px;
        display: inline-block;
        margin-right: 5px;
    }

    /* Modal chung */
    .custom-modal {
        display: none; /* Ẩn modal mặc định */
        position:fixed !important; /* Giữ modal cố định */
        top: 0 !important;
        left: 0 !important;
        width: 100%!important;
        height:  100% !important;
        background-color: rgba(0, 0, 0, 0.3) !important; /* Màu nền đen mờ */
        justify-content: center;
        align-items: center;
        z-index: 10 !important; /* Đảm bảo modal nằm phía trên các thành phần khác */
        border-top-left-radius: 1.5rem;
        border-top-right-radius:1.5rem;
    }

        .custom-modal:after {
            content: "";
            position: fixed;
            background-color: rgba(0, 0, 0, 0.3) !important;
            width: 53px;
            height: 24px;
            top: -24px;
            left: 50%;
            transform: translateX(-50%);
            border-top-left-radius: 0.75rem;
            border-top-right-radius: 0.75rem;
            z-index: 10
        }
    #selectedSeatsList .custom-li {
        all: unset !important;
        width: 20px !important;
        height: 20px !important;
        font-size: 14px !important;
        color: light-dark(var(--color-yellow), #222222) !important;
        background-color: light-dark( #222222,var(--color-yellow)) !important;
        border-radius: 0.5rem !important;
        padding: 6px !important;
        text-align: center;
    }

    .custom-modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        max-width: 500px;
        max-height:700px;
        width: 90%;
        position: relative;
        z-index: 20;
        transform:translateY(-50px);
    }

    .custom-modal-header {
        display: flex;
        justify-content: center;
        gap:1rem;
        align-items: center;
        border-bottom: 1px solid #ddd;
        padding-bottom: 10px;
        z-index:30;
    }

    .custom-modal-body {
        --size-box-ticker:24px;

        margin: 20px 0;
        background-color: light-dark(#fff897, #222222);
        padding: 14px;
        display: flex;
        justify-content: center;
        border-radius: 0.75rem;
    }
        .custom-modal-body .modal-body-title {
            position: relative;
        }
        .custom-modal-body .modal-body-title::after{
            content: "";
            position:absolute;
            width: var(--size-box-ticker);
            height: var(--size-box-ticker);
            background-color: light-dark(#fff, #222222);
            top: -20px;
            right:0px;
            border-bottom-left-radius: 0.75rem;
            border-bottom-right-radius: 0.75rem;
        }
            .custom-modal-body .modal-body-title::before {
                content: "";
                position: absolute;
                width: var(--size-box-ticker);
                height: var(--size-box-ticker);
                background-color: light-dark(#fff, #222222);
                bottom: -20px;
                right: 0px;
                border-top-left-radius: 0.75rem;
                border-top-right-radius: 0.75rem;
            }

            .custom-modal-footer {
                display: flex;
                justify-content: center;
                gap: 1rem;
            }
                .custom-modal-footer .btn-submit-modal {
                    background-color: light-dark(#222222,var(--color-yellow));
                    color: light-dark(var(--color-yellow),#222222);
                }

                    .custom-modal-footer .btn-submit-modal:hover {
                        background-color: #0094ff;
                        color: #ffffff;
                        box-shadow: 0 0 8px #0094ff;
                    }
                    .custom-modal-footer .btn-submit-modal:active {
                        background-color: white;
                        color: #0094ff;
                    }

                .custom-modal-footer .btn-close-modal:hover,
                .btn-back:hover {
                    background-color: #ff0000;
                    color: white;
                }
</style>

<!-- JavaScript chọn ghế -->
<script>

    //chức năng thanh toán onl
    let MY_BANK = {
        BANK_ID: 'MB',
        ACCOUNT_NO: '0908335809'
    };

    let onClose = false;

        function togglePaymentMethod() {
            const paymentMethod = document.getElementById("paymentMethod").value;
            const qrCodeSection = document.getElementById("qrCodeSection");
            let payMentConfirmation = document.getElementById("PaymentConfirmation").value;
            let payMenthod = document.getElementById("PaymentMethod").value;
            const btnSubmit = document.querySelector('.btn-submit-modal');
            onClose = false;

            if (paymentMethod === "1")
            {
                //tính tiền
                isSucess = false;
                 const ticketPrice = parseFloat(@Model.TicketPrice);
                const selectedSeats = document.querySelectorAll('.seat.selected');
                 const totalPrice = (selectedSeats.length * ticketPrice) / 10;

                 // Thông tin vé (từ Razor)
                 const userID = '@Session["UserID"]';
                 const username = '@Session["Username"]';
                 const movieTitle = '@Model.MovieTitle';

                 // đang code chưa có test thử


                 // Tạo mô tả giao dịch
                const DESCRIPTION = `${userID}${Date.now()}${movieTitle}${selectedSeats.length}`;

                 let QR = `https://img.vietqr.io/image/${MY_BANK.BANK_ID}-${MY_BANK.ACCOUNT_NO}-qr_only.png?amount=${totalPrice}&addInfo=${DESCRIPTION}`

                payMentConfirmation = true;
                payMenthod = "Transfer"
                btnSubmit.disabled = true;

                let countdown = 180;
                qrCodeSection.classList.add("payment");
                qrCodeSection.innerHTML = `
                     <p>Vui lòng quét mã QR bên dưới để chuyển khoản:</p>
                    <img src="${QR}" alt="QR Code" style="width: 150px; height: 150px;">
                    <p>Hệ thống sẽ kiểm tra thanh toán tự động trong <span id="countdown">${countdown}</span> giây.</p>
                 `;
                const countdownElement = document.getElementById("countdown");

                // Hàm kiểm tra thanh toán
                const checkPayment = () => {
                    checkPaid(DESCRIPTION, totalPrice); // Gọi hàm kiểm tra thanh toán
                    if (onClose) {
                        return;
                    }
                    if (countdown > 0) {
                        countdown -= 1; // Giảm thời gian còn lại
                        countdownElement.textContent = countdown; // Cập nhật giao diện
                        setTimeout(checkPayment, 1000); // Gọi lại sau 1 giây
                    } else {
                        // Kết thúc kiểm tra sau 20 giây
                        qrCodeSection.innerHTML += `<p>Thời gian kiểm tra đã hết. Vui lòng thử lại.</p>`;
                        isSucess = true;
                    }
                };

                // Bắt đầu kiểm tra
                checkPayment();


            } else {
                payMentConfirmation = false;
                payMenthod = "PayAtTheCounter";
                btnSubmit.disabled = false;
                qrCodeSection.classList.remove("payment");
                qrCodeSection.innerHTML = ``;

            }
        }

        //document.getElementById("paymentMethod").addEventListener("change", togglePaymentMethod);
        let isSucess = false;
        async function checkPaid(DESCRIPTION, totalPrice) {
            if (isSucess || onClose)
            {
                return;
            }
            else { 
                try {
                    const response = await fetch("https://script.google.com/macros/s/AKfycbw6H1hASw8btWd9p1jUoI0BEYqquTGW8CQuphoSsVUVUjTnh564Uz4RSJ2vPeo9YfFh/exec");
                    const data = await response.json();

                    const lastPaid = data.data[data.data.length - 1];

                    LastPrice = lastPaid["Giá trị"];
                    LastDescription = lastPaid["Mô tả"];

                    if (LastPrice >= totalPrice && LastDescription.includes(DESCRIPTION)) {
                        document.querySelector('.btn-submit-modal').disabled = false;
                        document.getElementById("qrCodeSection").innerHTML = `
                            <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#75FB4C"><path d="m424-296 282-282-56-56-226 226-114-114-56 56 170 170Zm56 216q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"/></svg>
                            <p>Thanh toán thành công!</p>
                            <p>Sau 5 giây sẽ tự động xác nhận: <span id="cheese">1</span>s</p>
                            `;
                        let c = 1;
                        const huy = setInterval(() => {
                            c++;
                            document.getElementById("cheese").textContent = c;

                            if (c <= 5) {
                                document.getElementById("PaymentConfirmation").value = true;
                                document.getElementById('ticketForm').submit();
                                clearInterval(huy); 
                            }
                        }, 1000); 
                        isSucess = true;
                    }
                    
                    else {
                        console.log("thanh toán không thành công")
                    }
                }
                catch {
                    console.log("erros");
                    }
            }
        }


    //-------------------------------------------------------------------------------------

    function selectSeat(seat) {
        // Kiểm tra nếu ghế có lớp "available" và chưa bị chọn
        if (seat.classList.contains('available')) {
            // Toggle lớp "selected" để thay đổi màu
            seat.classList.toggle('selected');
            updateSelectedSeatsCount();
        }
    }

    function updateSelectedSeatsCount() {
        const selectedSeats = document.querySelectorAll('.seat.selected');
        const selectedSeatsCount = document.getElementById('selectedSeatCount');

        // Cập nhật số lượng ghế đã chọn
        selectedSeatsCount.textContent = selectedSeats.length;
    }

  function showSelectedSeats() {
    const selectedSeats = document.querySelectorAll('.seat.selected');
    const selectedSeatsList = document.getElementById('selectedSeatsList');
    const selectedSeatsCount = document.getElementById('selectedSeatCount');
    const selectedSeatsInput = document.getElementById('SelectedSeats');
    const ticketPrice = parseFloat('@Model.TicketPrice'); // Lấy giá vé từ model
    const totalPriceElement = document.getElementById('totalPrice'); // Phần tử hiển thị giá vé tổng

    // Xóa nội dung cũ
    selectedSeatsList.innerHTML = '';
    selectedSeatsInput.value = '';

    // Cập nhật số ghế đã chọn
    if (selectedSeats.length === 0) {
        selectedSeatsList.innerHTML = '<li style="color:light-dark( #222222,var(--color-yellow)) !important; all: unset !important; width: auto !important; height:auto !important; font-size: 14px !important;">Không có ghế nào được chọn</li>';
        selectedSeatsCount.textContent = '0';
        totalPriceElement.textContent = '0 VND'; // Cập nhật giá vé tổng về 0
    } else {
        selectedSeats.forEach(seat => {
            const li = document.createElement('li');
            li.textContent = seat.getAttribute('data-seat'); // Hiển thị số ghế
            li.classList.add('custom-li');
            selectedSeatsList.appendChild(li);
        });

        selectedSeatsCount.textContent = selectedSeats.length; // Cập nhật số ghế đã chọn

        // Cập nhật giá vé tổng
        const totalPrice = selectedSeats.length * ticketPrice;
        totalPriceElement.textContent = totalPrice.toLocaleString() + ' VND'; // Định dạng số và hiển thị

        // Cập nhật giá trị cho SelectedSeats
        selectedSeatsInput.value = Array.from(selectedSeats)
            .map(seat => seat.getAttribute('data-seat')) // Lấy số ghế
            .join(','); // Nối các số ghế thành một chuỗi
    }

    // Mở modal
    openModal();
}

function openModal() {
    const modal = document.getElementById('confirmationModal');
    modal.style.display = 'flex'; // Hiển thị modal
}

function closeModal() {
    const modal = document.getElementById('confirmationModal');
    onClose = true;
    modal.style.display = 'none'; // Ẩn modal
}

    function submitForm() {
        const btnSubmit = document.querySelector('.btn-submit-modal');
        const form = document.getElementById('ticketForm');
        if (btnSubmit.disabled) {
            // Nếu nút submit bị vô hiệu hóa, không thực hiện hành động gì
            alert('Vui lòng hoàn tất thanh toán trước khi xác nhận.');
            return;
        }
        form.submit(); // Gửi form
    }



</script>
